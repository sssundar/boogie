Curl requests to test the BoogieBackend v0
Last Revised 2016-10-09 by Sushant Sundaresh

-- Local Testing --

(1) Test Presence
http://localhost:8080/presence/?user=sudha&password=password1 works fine - 1,2,3 returned.

(2) Storage paths set up
	Let's try putting something in them, and seeing whether the resulting arrays are ordered properly.
		In each person's folder, let's put 3 files 
			Amma: (0_mani.txt, 1_sushant.txt, 2_sudha.3gp)
			Mani: (2_mani.txt, 1_sushant.txt, 0_sudha.3gp)
			Sushant: (1_mani.txt, 2_sushant.txt, 0_sudha.3gp)
		and let's see if they sort correct on startup by printing the arrays to stdout!
	Works!

(3) Mailbox to check ordering, auth, and lack of state change
http://localhost:8080/check_mailbox/?user=sudha&password=password1 should return 0_mani.txt - yes
http://localhost:8080/check_mailbox/?user=sudha&password=password1 should return 0_mani.txt - yes
http://localhost:8080/check_mailbox/?user=sushant&password=password1 should return nothing - yes
http://localhost:8080/check_mailbox/?user=sushant&password=password0 should return 0_sudha.3gp - yes

(4) Download - with fake files to check deletion
curl -o 0_sudha.txt "http://localhost:8080/download/?user=sushant&password=password0&fname=0_sudha.txt" should have 0 size - yes
curl -o 1_sudha.3gp "http://localhost:8080/download/?user=sushant&password=password1&fname=0_sudha.3gp" should have 0 size - yes
curl -o 2_sudha.3gp "http://localhost:8080/download/?user=sushant&password=password0&fname=0_sudha.3gp" should have >0 size - fails

Deleting file results in timeout - need callback once file served.
Also need to RETURN output of serve_file. Works fine now.

(5) Upload - with fake files, then mailbox + download to make sure state changed properly, for two different users

curl -X POST -F "myFile=@/home/sush/Documents/boogie/src/share_and_message_server/password0_sushant.txt" "http://localhost:8080/upload"

Clear directories
Make a single test file password0_sushant.txt
Check everyone's mailbox
Run the curl command above
Make sure it's in now in everyone's directory with "hi" inside
Check everyone's mailbox - and make sure it's gone from the temporary directory
Try and retrieve it
curl -o test.txt "http://localhost:8080/download/?user=sushant&password=password0&fname=1476048436516_sushant.txt"
Yes! Good.

(6) Test RLE locally only - not worth testing on branch. Just make sure it works with a POST request to the specific url, then try to get the latest RLE
	Works!!
	
-- Testing Remotely With an Android App --

ssh -i test_voip.pem ubuntu@ec2-54-183-116-184.us-west-1.compute.amazonaws.com
scp -i test_voip.pem ~/Documents/boogie/src/voice_share_server/voice_share_server.py ubuntu@ec2-54-183-116-184.us-west-1.compute.amazonaws.com:~

scp -i test_voip.pem ~/Documents/boogie/src/share_and_message_server/boogie_revb_v0.py ubuntu@ec2-54-183-116-184.us-west-1.compute.amazonaws.com:~

ps aux | grep -e python
top.. k .. PID

curl -X POST -F "myFile=@/home/sush/Documents/boogie/src/voice_share_server/test.3gp" ec2-54-183-116-184.us-west-1.compute.amazonaws.com:8080/upload
curl -o test.3gp ec2-54-183-116-184.us-west-1.compute.amazonaws.com:8080/download/?name=test.3gp
curl -X GET ec2-54-183-116-184.us-west-1.compute.amazonaws.com:8080/check_mailbox

Works!

-- Testing Guest Access --
ssh -i test_voip.pem ubuntu@ec2-54-183-116-184.us-west-1.compute.amazonaws.com
scp -i test_voip.pem ~/Documents/boogie/src/share_and_message_server/boogie_revb_v2.py ubuntu@ec2-54-183-116-184.us-west-1.compute.amazonaws.com:~

http://ec2-54-183-116-184.us-west-1.compute.amazonaws.com:9080/?user=guest&password=password3

Currently, works GREAT with one user, no flicker, clears screen. 

ToDo
	Commit with fake filename, fake passwords, with bug reported in commit.	
	Work on auto-upgrade as well if you can - only need it to work for Thatha.
	
	Wipe server to new instance. Set it up following your guide. 
	Upgrade server and run a clean instance on the right 8080 port, with the right filename
		Use the right passwords and PORT
		Make text guide: zoom, clear cache, CLOSE AFTER DONE, for safari (mac) and chrome (windows)
	Build all the packages with updated server public DNS. save to google drive.	
		Use the right passwords, and DNS, and PORT
	Test with me as Thatha, with Amma as Amma, and Appa and I on the browser.
	Put myself as me 
	Walk Patti through an auto-upgrade (hereafter) uninstall/reinstall (might need to fix her email issues)
	Make sure they have the guide printed
	Make sure Balu mama is aware of the browser option now (email) and email suman, vikram, and Amma/Appa/me as well just in case.	
	
	Update documentation and close this out for a while.
		Socket.io is a must in a future revision. The current one is not privacy concerned + very inefficient on the client side.
		Known issues with bandwidth usage on receiver side 
			Source side has been fixed
		Known issues with cache on receiver side (guest)
			Doesn't appear to matter in short term (5-10 minutes)
			